DROP TABLE IF EXISTS `Accounts`;
CREATE TABLE [Accounts] ([account_id]	integer PRIMARY KEY AUTOINCREMENT NOT NULL,[account_name]	char(30) NOT NULL COLLATE NOCASE,[account_password]	char(128) NOT NULL COLLATE NOCASE            );
INSERT INTO Accounts VALUES (1, 'admin', '12345');
DROP TABLE IF EXISTS `sqlite_sequence`;
CREATE TABLE sqlite_sequence(name,seq);
INSERT INTO sqlite_sequence VALUES ('Subjects', '7');
INSERT INTO sqlite_sequence VALUES ('Accounts', '1');
DROP TABLE IF EXISTS `Assessment_Weight`;
CREATE TABLE [Assessment_Weight] ([assessw_id]	integer PRIMARY KEY AUTOINCREMENT NOT NULL,[assessw_type]	char(12) COLLATE NOCASE,[assessw_weight]	numeric            );
DROP TABLE IF EXISTS `Assessments`;
CREATE TABLE Assessments (account_id integer, assess_id integer PRIMARY KEY, assess_name char(30), assessw_id integer, assess_date datetime, subject_id integer, profile_id integer);
DROP TABLE IF EXISTS `Classes`;
CREATE TABLE Classes (account_id integer, class_id integer PRIMARY KEY, class_name char(30));
INSERT INTO Classes VALUES (1, 1, 'Grade 1');
INSERT INTO Classes VALUES (1, 2, 'Grade 2');
INSERT INTO Classes VALUES (1, 3, 'Grade 3');
INSERT INTO Classes VALUES (1, 4, 'Grade 6');
INSERT INTO Classes VALUES (1, 5, 'Grade 5');
DROP TABLE IF EXISTS `Grades`;
CREATE TABLE [Grades] ([grade_id]	integer PRIMARY KEY AUTOINCREMENT NOT NULL,[student_id]	integer NOT NULL,[assess_id]	integer NOT NULL,[grade_mark]	float NOT NULL            ,                FOREIGN KEY ([assess_id])                    REFERENCES [Assessments]([assess_id]),                FOREIGN KEY ([student_id])                    REFERENCES [Students]([student_id])            );
DROP TABLE IF EXISTS `Profiles`;
CREATE TABLE Profiles (class_id integer, ending_school_year integer, starting_school_year integer, profile_id integer PRIMARY KEY, account_id integer, current_term integer, profile_description char(255));
INSERT INTO Profiles VALUES (3, 2013, 2012, 1, 1, 1, '');
DROP TABLE IF EXISTS `StudentClass`;
CREATE TABLE [StudentClass] ([stu_cla_id]	integer PRIMARY KEY AUTOINCREMENT NOT NULL,[student_id]	integer NOT NULL,[class_id]	integer NOT NULL            ,                FOREIGN KEY ([class_id])                    REFERENCES [Classes]([class_id]),                FOREIGN KEY ([student_id])                    REFERENCES [Students]([student_id])            );
DROP TABLE IF EXISTS `Subjects`;
CREATE TABLE [Subjects] ([subject_id]	integer PRIMARY KEY AUTOINCREMENT NOT NULL,[subject_name]	char(50) COLLATE NOCASE            );
INSERT INTO Subjects VALUES (1, 'Science');
INSERT INTO Subjects VALUES (2, 'Mathematics');
INSERT INTO Subjects VALUES (3, 'Bible');
INSERT INTO Subjects VALUES (4, 'Language');
INSERT INTO Subjects VALUES (5, 'Art');
INSERT INTO Subjects VALUES (6, 'Penmanship');
INSERT INTO Subjects VALUES (7, 'Social Studies');
DROP TABLE IF EXISTS `SubjectClass`;
CREATE TABLE "SubjectClass"(     "sub_pro_id" INTEGER PRIMARY KEY  NOT NULL  ,      "subject_id" integer  NOT NULL  ,      "class_id" integer  NOT NULL  ,      "profile_id" Integer  NOT NULL  );
DROP TABLE IF EXISTS `Students`;
CREATE TABLE "Students"(     "account_id" integer  NOT NULL  ,      "student_id" integer PRIMARY KEY  NOT NULL  ,      "student_first_name" char(20)  NOT NULL  ,      "student_last_name" char(20)  NOT NULL  ,      "student_dob" datetime  NOT NULL  ,      "stu_cla_id" integer  NOT NULL  );
